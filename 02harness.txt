pipeline:
  name: List EKS Nodes and Pods
  identifier: List_EKS_Nodes_and_Pods
  projectIdentifier: your_project_id
  orgIdentifier: your_org_id
  tags: {}
  stages:
    - stage:
        name: List Nodes and Pods
        identifier: List_Nodes_and_Pods
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: your_service_id  # Add a valid service reference here
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
          infrastructure:
            environmentRef: your_environment_id
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: your_eks_connector_id  # Reference to your EKS Kubernetes Cluster Connector
                namespace: default
                releaseName: release
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: List Nodes
                  identifier: List_Nodes
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          # Use the kubeconfig file from the Harness File Store
                          export KUBECONFIG=/tmp/kubeconfig
                          cp <+fileStore.get("/kubeconfig")> $KUBECONFIG

                          # List nodes in the EKS cluster
                          kubectl get nodes
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: List Pods
                  identifier: List_Pods
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          # Use the kubeconfig file from the Harness File Store
                          export KUBECONFIG=/tmp/kubeconfig
                          cp <+fileStore.get("/kubeconfig")> $KUBECONFIG

                          # List pods in the EKS cluster
                          kubectl get pods --all-namespaces
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback


-----
pipeline:
  name: List EKS Nodes and Pods
  identifier: List_EKS_Nodes_and_Pods
  projectIdentifier: your_project_id
  orgIdentifier: your_org_id
  tags: {}
  stages:
    - stage:
        name: List Nodes and Pods
        identifier: List_Nodes_and_Pods
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: your_service_id  # Add a valid service reference here
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
          infrastructure:
            environmentRef: your_environment_id
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: your_eks_connector_id  # Reference to your EKS Kubernetes Cluster Connector
                namespace: default
                releaseName: release
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: List Nodes
                  identifier: List_Nodes
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          # List nodes in the EKS cluster
                          kubectl get nodes
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: List Pods
                  identifier: List_Pods
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          # List pods in the EKS cluster
                          kubectl get pods --all-namespaces
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback



-------
pipeline:
  name: List EKS Nodes and Pods
  identifier: List_EKS_Nodes_and_Pods
  projectIdentifier: your_project_id
  orgIdentifier: your_org_id
  tags: {}
  stages:
    - stage:
        name: List Nodes and Pods
        identifier: List_Nodes_and_Pods
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: ""
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
          infrastructure:
            environmentRef: your_environment_id
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: your_eks_connector_id  # Reference to your EKS Kubernetes Cluster Connector
                namespace: default
                releaseName: release
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: List Nodes
                  identifier: List_Nodes
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          # List nodes in the EKS cluster
                          kubectl get nodes
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: List Pods
                  identifier: List_Pods
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          # List pods in the EKS cluster
                          kubectl get pods --all-namespaces
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies: []
  identifier: "List_EKS_Nodes_and_Pods"
  properties:
    ci:
      codebase:
        connectorRef: ""
        build: <+input>
