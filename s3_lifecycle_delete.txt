#!/bin/bash

# Files containing the list of S3 bucket names
BUCKET_LIST_FILE1="buckets1.txt"
BUCKET_LIST_FILE2="buckets2.txt"
OUTPUT_FILE="buckets_not_in_second_list.txt"

# Sort both files (optional but ensures the comparison is consistent)
sort $BUCKET_LIST_FILE1 -o $BUCKET_LIST_FILE1
sort $BUCKET_LIST_FILE2 -o $BUCKET_LIST_FILE2

# Compare the files and write the result to the output file
comm -23 $BUCKET_LIST_FILE1 $BUCKET_LIST_FILE2 > $OUTPUT_FILE

# Print the output file contents
echo "Buckets in $BUCKET_LIST_FILE1 but not in $BUCKET_LIST_FILE2:"
cat $OUTPUT_FILE



---
python code to check s3 buckets
--
import boto3
import botocore

def check_buckets(file_path):
    s3 = boto3.client('s3')
    existing_buckets = []
    
    with open(file_path, 'r') as file:
        bucket_names = file.readlines()
    
    for bucket_name in bucket_names:
        bucket_name = bucket_name.strip()
        try:
            s3.head_bucket(Bucket=bucket_name)
            existing_buckets.append(bucket_name)
        except botocore.exceptions.ClientError as e:
            error_code = int(e.response['Error']['Code'])
            if error_code == 404:
                # Bucket does not exist
                continue
            else:
                # Some other error, re-raise
                raise
    
    return existing_buckets

def main():
    bucket_list_file = 'buckets.txt'
    existing_buckets = check_buckets(bucket_list_file)
    
    print("Existing buckets:")
    for bucket in existing_buckets:
        print(bucket)
    
    print(f"Total existing buckets: {len(existing_buckets)}")

if __name__ == "__main__":
    main()





-----
s3 buckets availability check list
--

#!/bin/bash

# File containing the list of S3 bucket names
BUCKET_LIST_FILE="buckets.txt"

# Initialize the count
count=0

# Read each bucket name from the file
while IFS= read -r bucket; do
  # Check if the bucket exists
  if aws s3api head-bucket --bucket "$bucket" 2>/dev/null; then
    echo "Bucket exists: $bucket"
    count=$((count + 1))
  else
    echo "Bucket does not exist: $bucket"
  fi
done < "$BUCKET_LIST_FILE"

# Print the total count of existing buckets
echo "Total existing buckets: $count"


---
#!/bin/bash

# Check if bucket name is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <bucket-name>"
  exit 1
fi

BUCKET_NAME=$1

# Create lifecycle policy JSON
LIFECYCLE_POLICY='{
    "Rules": [
        {
            "ID": "Immediate deletion of all objects",
            "Filter": {
                "Prefix": ""
            },
            "Status": "Enabled",
            "Expiration": {
                "Days": 1
            },
            "NoncurrentVersionExpiration": {
                "NoncurrentDays": 1
            },
            "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1
            }
        }
    ]
}'

# Apply the lifecycle policy to the bucket
aws s3api put-bucket-lifecycle-configuration --bucket "$BUCKET_NAME" --lifecycle-configuration "$LIFECYCLE_POLICY"

if [ $? -eq 0 ]; then
  echo "Lifecycle policy created for bucket: $BUCKET_NAME"
else
  echo "Failed to create lifecycle policy for bucket: $BUCKET_NAME"
fi
