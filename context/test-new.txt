Hi Team,

Just summarising our recent exchange with Courtney and Casey regarding the Keycloak theme:

The requirement is to deploy a new Keycloak theme—not create one from scratch. The plan is to reuse the existing ethos theme code with updated images and text, and this will be placed in a new folder within the GitHub project.

Courtney mentioned she has experience deploying themes and intends to proceed that way. We confirmed we can support the deployment and suggested starting with non-prod, then moving to prod once the new CICD account is in place.

As for timing, it’s still tentative—Courtney indicated it may be needed soon and possibly tied to the new Keycloak deployment. We're waiting for concrete dates, and we’ll respond accordingly once those are confirmed.

Let me know if anything needs clarification.

Thanks,
Kiran


-----
template:
  name: Generic Helm Deploy Template
  identifier: genericHelmDeployPipeline
  versionLabel: v1
  type: Pipeline
  projectIdentifier: caaskeycloak
  orgIdentifier: Keycloak
  spec:
    name: Generic Helm Deployment Pipeline
    identifier: genericHelmDeployPipeline
    tags: {}
    variables:
      - name: chartName
        type: String
      - name: chartVersion
        type: String
      - name: namespace
        type: String
      - name: environment
        type: String
      - name: serviceIdentifier
        type: String
      - name: infraIdentifier
        type: String
      - name: bitbucketConnectorRef
        type: String
    stages:
      - stage:
          name: Deploy Helm Chart
          identifier: deployHelmChart
          type: Deployment
          spec:
            deploymentType: NativeHelm
            service:
              serviceRef: <+pipeline.variables.serviceIdentifier>
            environment:
              environmentRef: <+pipeline.variables.environment>
              infrastructureDefinitions:
                - identifier: <+pipeline.variables.infraIdentifier>
            execution:
              steps:
                - step:
                    name: Create Namespace
                    identifier: createNamespace
                    template:
                      storeType: Remote
                      connectorRef: <+pipeline.variables.bitbucketConnectorRef>
                      repoName: hydra-devops-automation
                      filePath: harness/shared/steps/create-namespace-step.yaml
                      versionLabel: v1
                      templateInputs:
                        namespace: <+pipeline.variables.namespace>
                - step:
                    name: Helm Deploy
                    identifier: helmDeploy
                    type: HelmDeployment
                    timeout: 10m
                    spec:
                      skipDryRun: false
                      ignoreReleaseHistFailStatus: false
            rollbackSteps:
              - step:
                  name: Helm Rollback
                  identifier: helmRollback
                  template:
                    storeType: Remote
                    connectorRef: <+pipeline.variables.bitbucketConnectorRef>
                    repoName: hydra-devops-automation
                    filePath: harness/shared/steps/helm-rollback-step.yaml
                    versionLabel: v1
----
template:
  name: Generic Helm Deploy Template
  identifier: genericHelmDeployPipeline
  versionLabel: v1
  type: Pipeline
  projectIdentifier: caaskeycloak
  orgIdentifier: Keycloak
  spec:
    pipeline:
      name: Generic Helm Deployment Pipeline
      identifier: genericHelmDeployPipeline
      tags: {}
      variables:
        - name: chartName
          type: String
        - name: chartVersion
          type: String
        - name: namespace
          type: String
        - name: environment
          type: String
        - name: serviceIdentifier
          type: String
        - name: infraIdentifier
          type: String
        - name: bitbucketConnectorRef
          type: String
      stages:
        - stage:
            name: Deploy Helm Chart
            identifier: deployHelmChart
            type: Deployment
            spec:
              deploymentType: NativeHelm
              service:
                serviceRef: <+pipeline.variables.serviceIdentifier>
              environment:
                environmentRef: <+pipeline.variables.environment>
                infrastructureDefinitions:
                  - identifier: <+pipeline.variables.infraIdentifier>
              execution:
                steps:
                  - step:
                      name: Create Namespace
                      identifier: createNamespace
                      template:
                        storeType: Remote
                        connectorRef: <+pipeline.variables.bitbucketConnectorRef>
                        repoName: hydra-devops-automation
                        filePath: harness/shared/steps/create-namespace-step.yaml
                        versionLabel: v1
                        templateInputs:
                          namespace: <+pipeline.variables.namespace>
                  - step:
                      name: Helm Deploy
                      identifier: helmDeploy
                      type: HelmDeployment
                      timeout: 10m
                      spec:
                        skipDryRun: false
                        ignoreReleaseHistFailStatus: false
                rollbackSteps:
                  - step:
                      name: Helm Rollback
                      identifier: helmRollback
                      template:
                        storeType: Remote
                        connectorRef: <+pipeline.variables.bitbucketConnectorRef>
                        repoName: hydra-devops-automation
                        filePath: harness/shared/steps/helm-rollback-step.yaml
                        versionLabel: v1


-----
variable "vpc_id" {
  description = "VPC ID for Route 53 private hosted zone association"
  type        = string
}

variable "region" {
  description = "AWS region"
  type        = string
}

resource "aws_route53_zone" "keycloak_internal" {
  name = "cio.keycloak.internal"
  vpc {
    vpc_id     = var.vpc_id
    vpc_region = var.region
  }

  comment = "Private hosted zone for internal Keycloak access"
  tags = {
    Name = "keycloak-private-zone"
  }
}

resource "aws_route53_record" "keycloak_ingress" {
  zone_id = aws_route53_zone.keycloak_internal.zone_id
  name    = "hydra.cio.keycloak.internal"
  type    = "CNAME"
  ttl     = 300
  records = ["your-alb-dns-name.elb.amazonaws.com"] # Replace with actual ALB DNS
}


