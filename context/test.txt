pipeline {
    agent any

    parameters {
        string(name: 'CHART_NAME', description: 'Helm chart name (e.g., nginx, keycloak)')
        string(name: 'CHART_VERSION', description: 'Helm chart version (e.g., 1.21.0)')
        string(name: 'UPSTREAM_BRANCH', defaultValue: 'main', description: 'Branch in hydra-helm-upstreams (fixed to main)', trim: true)
        string(name: 'OVERLAY_FEATURE_BRANCH', defaultValue: '', description: 'Feature branch name to create/push in hydra-helm-overlays')
    }

    environment {
        UPSTREAM_REPO = 'git@bitbucket.org:your-org/hydra-helm-upstreams.git'
        OVERLAYS_REPO = 'git@bitbucket.org:your-org/hydra-helm-overlays.git'
        OVERLAYS_MAIN_BRANCH = 'develop'
    }

    stages {
        stage('Clone Repositories') {
            steps {
                sh '''
                rm -rf upstream overlays
                git clone --branch ${UPSTREAM_BRANCH} ${UPSTREAM_REPO} upstream
                git clone ${OVERLAYS_REPO} overlays
                '''
            }
        }

        stage('Create or Checkout Overlay Feature Branch') {
            steps {
                dir('overlays') {
                    sh '''
                    git checkout ${OVERLAYS_MAIN_BRANCH}
                    git checkout -b ${OVERLAY_FEATURE_BRANCH} || git checkout ${OVERLAY_FEATURE_BRANCH}
                    '''
                }
            }
        }

        stage('Sync Chart Folder from Upstream') {
            steps {
                sh '''
                rm -rf overlays/${CHART_NAME}/chart
                mkdir -p overlays/${CHART_NAME}/chart
                cp -R upstream/${CHART_NAME}/* overlays/${CHART_NAME}/chart/
                '''
            }
        }

        stage('Push Changes to Feature Branch') {
            steps {
                dir('overlays') {
                    sh '''
                    git config user.name "ci-bot"
                    git config user.email "ci-bot@yourorg.com"
                    git add ${CHART_NAME}/chart
                    git commit -m "Sync: ${CHART_NAME} ${CHART_VERSION} from upstream to overlay feature branch"
                    git push origin ${OVERLAY_FEATURE_BRANCH}
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}




----------
Purpose: A readonly repo where Jenkins mirrors public Helm charts (e.g., ingress-nginx, cert-manager, keycloak).
Status: âœ… Created and integrated.
hydra-helm-overlays (Bitbucket repo)
Purpose: Customization repo where overlays (custom values.yaml, templates) live, based on upstream charts.
