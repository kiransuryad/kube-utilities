@Library(['common-lib@3-stable']) _

pipeline {
    agent none

    parameters {
        string(name: 'CHART_NAME', description: 'Helm chart name (e.g., nginx, keycloak)')
        string(name: 'CHART_VERSION', description: 'Helm chart version (e.g., 1.21.0)')
        string(name: 'OVERLAY_FEATURE_BRANCH', description: 'Feature branch name to create/push in hydra-helm-overlays')
    }

    environment {
        UPSTREAM_GIT_URL = 'https://bitbucket.org/your-org/hydra-helm-upstreams.git'
        OVERLAYS_GIT_URL = 'https://bitbucket.org/your-org/hydra-helm-overlays.git'
        OVERLAYS_MAIN_BRANCH = 'develop'
    }

    stages {
        stage('Clone Repositories using HTTPS') {
            agent { label 'aws' }

            environment {
                GIT_SSL_NO_VERIFY = 'true'
            }

            steps {
                withCredentials([usernamePassword(credentialsId: 'kiran-creds', usernameVariable: 'BB_USER', passwordVariable: 'BB_TOKEN')]) {
                    sh '''
                    rm -rf upstream overlays

                    echo "Cloning upstream (read-only) repo..."
                    git clone --branch main https://${BB_USER}:${BB_TOKEN}@bitbucket.org/your-org/hydra-helm-upstreams.git upstream

                    echo "Cloning overlays repo..."
                    git clone https://${BB_USER}:${BB_TOKEN}@bitbucket.org/your-org/hydra-helm-overlays.git overlays
                    '''
                }
            }
        }

        stage('Create/Checkout Overlay Feature Branch') {
            agent { label 'aws' }
            steps {
                dir('overlays') {
                    withCredentials([usernamePassword(credentialsId: 'kiran-creds', usernameVariable: 'BB_USER', passwordVariable: 'BB_TOKEN')]) {
                        sh '''
                        git checkout ${OVERLAYS_MAIN_BRANCH} || git checkout -b ${OVERLAYS_MAIN_BRANCH}
                        git checkout -b ${OVERLAY_FEATURE_BRANCH} || git checkout ${OVERLAY_FEATURE_BRANCH}
                        '''
                    }
                }
            }
        }

        stage('Sync Chart Folder from Upstream Repo') {
            agent { label 'aws' }
            steps {
                sh '''
                rm -rf overlays/${CHART_NAME}/chart
                mkdir -p overlays/${CHART_NAME}/chart
                cp -R upstream/${CHART_NAME}/* overlays/${CHART_NAME}/chart/
                '''
            }
        }

        stage('Commit & Push to Overlay Feature Branch') {
            agent { label 'aws' }
            steps {
                dir('overlays') {
                    withCredentials([usernamePassword(credentialsId: 'kiran-creds', usernameVariable: 'BB_USER', passwordVariable: 'BB_TOKEN')]) {
                        sh '''
                        git config user.name "${BB_USER}"
                        git config user.email "${BB_USER}@yourorg.com"

                        git add ${CHART_NAME}/chart || true
                        git commit -m "Overlay Sync: ${CHART_NAME} ${CHART_VERSION} from upstream main"
                        git push https://${BB_USER}:${BB_TOKEN}@bitbucket.org/your-org/hydra-helm-overlays.git HEAD:${OVERLAY_FEATURE_BRANCH}
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}





----------
Purpose: A readonly repo where Jenkins mirrors public Helm charts (e.g., ingress-nginx, cert-manager, keycloak).
Status: âœ… Created and integrated.
hydra-helm-overlays (Bitbucket repo)
Purpose: Customization repo where overlays (custom values.yaml, templates) live, based on upstream charts.
