# Packer Template for EKS Workers

# Variables
variable "aws_access_key" {
  description = "AWS Access Key required by Packer"
  type        = string
  default     = "${env("AWS_ACCESS_KEY_ID")}"
}

variable "aws_secret_key" {
  description = "AWS Secret Key required by Packer"
  type        = string
  default     = "${env("AWS_SECRET_ACCESS_KEY")}"
}

variable "aws_session_token" {
  description = "AWS Session Token required by Packer"
  type        = string
  default     = "${env("AWS_SESSION_TOKEN")}"
}

variable "aws_region" {
  description = "AWS region"
  type        = string
  default     = "us-west-2"
}

variable "instance_type" {
  description = "Instance type"
  type        = string
  default     = "t2.micro"
}

variable "vpc_name" {
  description = "VPC Name"
  type        = string
}

variable "subnet_name" {
  description = "Subnet Name"
  type        = string
}

variable "iam_users" {
  description = "IAM users"
  type        = list(string)
}

variable "iam_instance_profile" {
  description = "IAM instance profile"
  type        = string
}

variable "security_group_id" {
  description = "Security Group ID"
  type        = string
}

variable "nexpose_agent_token" {
  description = "Nexpose Agent Token"
  type        = string
}

variable "skip_create_ami" {
  description = "Skip AMI creation"
  type        = bool
  default     = false
}

# Data Sources
data "amazon-ami" "eks-1-27" {
  access_key    = "${var.aws_access_key}"
  filters = {
    name                = "amazon-eks-node-1.27-*"
    root-device-type    = "ebs"
    virtualization-type = "hvm"
  }
  most_recent = true
  owners      = ["602401143452"]
  region      = "${var.aws_region}"
  secret_key  = "${var.aws_secret_key}"
  token       = "${var.aws_session_token}"
}

data "amazon-ami" "eks-1-28" {
  access_key    = "${var.aws_access_key}"
  filters = {
    name                = "amazon-eks-node-1.28-*"
    root-device-type    = "ebs"
    virtualization-type = "hvm"
  }
  most_recent = true
  owners      = ["602401143452"]
  region      = "${var.aws_region}"
  secret_key  = "${var.aws_secret_key}"
  token       = "${var.aws_session_token}"
}

# Source Blocks
source "amazon-ebs" "eks-worker-1-27" {
  access_key          = "${var.aws_access_key}"
  secret_key          = "${var.aws_secret_key}"
  session_token       = "${var.aws_session_token}"
  region              = "${var.aws_region}"
  ami_name            = "EDA Optimised EKS 1.27 Worker Image"
  instance_type       = "${var.instance_type}"
  source_ami          = data.amazon-ami.eks-1-27.id
  ami_virtualization_type = "hvm"
  ami_users           = ["${var.ami_users}"]
  associate_public_ip_address = false
  iam_instance_profile = "${var.iam_instance_profile}"

  vpc_filter {
    filters = {
      "tag:Name" = "${var.vpc_name}"
    }
  }

  subnet_filter {
    filters = {
      "tag:Name" = "${var.subnet_name}"
    }
  }

  ebs_block_device {
    volume_type = "gp3"
    volume_size = 20
    device_name = "/dev/sda1"
  }

  run_tags = {
    Application = "optimised-eks-1-27-worker-ami"
    Name        = "amazon-eks-node-1.27-${local.timestamp}"
    Project     = "EDA"
  }

  security_group_id = "${var.security_group_id}"
  source_ami_filter = "ami-filter"

  # Other required parameters...
}

source "amazon-ebs" "eks-worker-1-28" {
  access_key          = "${var.aws_access_key}"
  secret_key          = "${var.aws_secret_key}"
  session_token       = "${var.aws_session_token}"
  region              = "${var.aws_region}"
  ami_name            = "EDA Optimised EKS 1.28 Worker Image"
  instance_type       = "${var.instance_type}"
  source_ami          = data.amazon-ami.eks-1-28.id
  ami_virtualization_type = "hvm"
  ami_users           = ["${var.ami_users}"]
  associate_public_ip_address = false
  iam_instance_profile = "${var.iam_instance_profile}"

  vpc_filter {
    filters = {
      "tag:Name" = "${var.vpc_name}"
    }
  }

  subnet_filter {
    filters = {
      "tag:Name" = "${var.subnet_name}"
    }
  }

  ebs_block_device {
    volume_type = "gp3"
    volume_size = 20
    device_name = "/dev/sda1"
  }

  run_tags = {
    Application = "optimised-eks-1-28-worker-ami"
    Name        = "amazon-eks-node-1.28-${local.timestamp}"
    Project     = "EDA"
  }

  security_group_id = "${var.security_group_id}"
  source_ami_filter = "ami-filter"

  # Other required parameters...
}

# Build Block
build {
  sources = [
    "source.amazon-ebs.eks-worker-1-27",
    "source.amazon-ebs.eks-worker-1-28"
  ]

  provisioner "shell" {
    script = "provisioners/scripts/eks_worker_install.sh"
  }

  provisioner "ansible-local" {
    playbook_file = "provisioners/ansible/playbooks/eks_worker.yml"
    role_paths    = [
      "provisioners/ansible/roles/base_image_amazonlinux",
      "provisioners/ansible/roles/nexpose_agent"
    ]
    extra_arguments = ["-vvv"]
  }

  provisioner "shell" {
    script = "provisioners/scripts/eks_worker_cleanup.sh"
  }
}

# Timestamp Cleanup
locals {
  timestamp = regex_replace(timestamp(), "[-TZ:]", "")
}
